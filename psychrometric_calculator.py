"""
–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Å–∏—Ö—Ä–æ–º–µ—Ç—Ä–∞ –í–ò–¢-1
–¢–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏–±–æ—Ä–∞
"""

# –ü—Å–∏—Ö—Ä–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞ –í–ò–¢-1 (–ø–æ–ª–Ω–∞—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –ø—Ä–∏–±–æ—Ä–∞)
# –î–∏–∞–ø–∞–∑–æ–Ω —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä: 5-25¬∞C, —Ä–∞–∑–Ω–æ—Å—Ç–∏: 0.5-11.0¬∞C
PSYCHROMETRIC_TABLE = {
    5: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 32, 6.5: 28, 7.0: 25, 7.5: 22, 8.0: 19, 8.5: 16, 9.0: 14, 9.5: 12, 10.0: 10, 10.5: 8, 11.0: 6},
    6: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 32, 6.5: 28, 7.0: 25, 7.5: 22, 8.0: 19, 8.5: 16, 9.0: 14, 9.5: 12, 10.0: 10, 10.5: 8, 11.0: 6},
    7: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 32, 6.5: 28, 7.0: 25, 7.5: 22, 8.0: 19, 8.5: 16, 9.0: 14, 9.5: 12, 10.0: 10, 10.5: 8, 11.0: 6},
    8: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 32, 6.5: 28, 7.0: 25, 7.5: 22, 8.0: 19, 8.5: 16, 9.0: 14, 9.5: 12, 10.0: 10, 10.5: 8, 11.0: 6},
    9: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 32, 6.5: 28, 7.0: 25, 7.5: 22, 8.0: 19, 8.5: 16, 9.0: 14, 9.5: 12, 10.0: 10, 10.5: 8, 11.0: 6},
    10: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    11: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    12: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    13: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    14: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    15: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    16: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    17: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    18: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    19: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    20: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    21: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    22: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 74, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    23: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    24: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5},
    25: {0.5: 92, 1.0: 85, 1.5: 78, 2.0: 72, 2.5: 66, 3.0: 60, 3.5: 55, 4.0: 50, 4.5: 45, 5.0: 40, 5.5: 36, 6.0: 27, 6.5: 24, 7.0: 21, 7.5: 18, 8.0: 16, 8.5: 14, 9.0: 12, 9.5: 10, 10.0: 8, 10.5: 7, 11.0: 5}
}

def calculate_humidity(t_dry: float, t_wet: float) -> dict:
    """
    –†–∞—Å—á–µ—Ç –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –ø–æ –ø—Å–∏—Ö—Ä–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π —Ç–∞–±–ª–∏—Ü–µ –í–ò–¢-1
    
    Args:
        t_dry (float): –ü–æ–∫–∞–∑–∞–Ω–∏–µ —Å—É—Ö–æ–≥–æ —Ç–µ—Ä–º–æ–º–µ—Ç—Ä–∞ (¬∞C)
        t_wet (float): –ü–æ–∫–∞–∑–∞–Ω–∏–µ –≤–ª–∞–∂–Ω–æ–≥–æ —Ç–µ—Ä–º–æ–º–µ—Ç—Ä–∞ (¬∞C)
    
    Returns:
        dict: –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–ª–∏ –æ—à–∏–±–∫–æ–π
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
        if t_dry < t_wet:
            return {
                "error": "–ü–æ–∫–∞–∑–∞–Ω–∏–µ –≤–ª–∞–∂–Ω–æ–≥–æ —Ç–µ—Ä–º–æ–º–µ—Ç—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—É—Ö–æ–≥–æ —Ç–µ—Ä–º–æ–º–µ—Ç—Ä–∞!",
                "success": False
            }
        
        # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–æ—Å—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä
        delta_t = t_dry - t_wet
        
        # –û–∫—Ä—É–≥–ª—è–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ
        t_rounded = round(t_dry)
        
        # –û–∫—Ä—É–≥–ª—è–µ–º —Ä–∞–∑–Ω–æ—Å—Ç—å –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ 0.5
        delta_rounded = round(delta_t * 2) / 2
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ
        if t_rounded not in PSYCHROMETRIC_TABLE:
            return {
                "error": f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {t_rounded}¬∞C –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω —Ç–∞–±–ª–∏—Ü—ã (5-25¬∞C)",
                "success": False
            }
        
        if delta_rounded not in PSYCHROMETRIC_TABLE[t_rounded]:
            return {
                "error": f"–†–∞–∑–Ω–æ—Å—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä {delta_rounded}¬∞C –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω —Ç–∞–±–ª–∏—Ü—ã (0.5-11.0¬∞C)",
                "success": False
            }
        
        # –ü–æ–ª—É—á–∞–µ–º –≤–ª–∞–∂–Ω–æ—Å—Ç—å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        humidity = PSYCHROMETRIC_TABLE[t_rounded][delta_rounded]
        
        return {
            "success": True,
            "t_dry": t_dry,
            "t_wet": t_wet,
            "delta_t": delta_t,
            "humidity": humidity,
            "result_text": f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {t_dry}¬∞C, —Ä–∞–∑–Ω–∏—Ü–∞: ŒîT = {delta_t}¬∞C, –≤–ª–∞–∂–Ω–æ—Å—Ç—å ‚âà {humidity}%"
        }
        
    except Exception as e:
        return {
            "error": f"–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞: {str(e)}",
            "success": False
        }

def get_table_range() -> dict:
    """
    –ü–æ–ª—É—á–∏—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –∏ —Ä–∞–∑–Ω–æ—Å—Ç–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ
    
    Returns:
        dict: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞—Ö —Ç–∞–±–ª–∏—Ü—ã
    """
    temperatures = list(PSYCHROMETRIC_TABLE.keys())
    min_temp = min(temperatures)
    max_temp = max(temperatures)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–∞–∑–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–µ—Ä–≤–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    first_temp = temperatures[0]
    deltas = list(PSYCHROMETRIC_TABLE[first_temp].keys())
    min_delta = min(deltas)
    max_delta = max(deltas)
    
    return {
        "temperature_range": f"{min_temp}-{max_temp}¬∞C",
        "delta_range": f"{min_delta}-{max_delta}¬∞C",
        "total_temperatures": len(temperatures),
        "total_deltas": len(deltas)
    }

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã
    test_cases = [
        (22, 19),  # 22¬∞C —Å—É—Ö–æ–π, 19¬∞C –≤–ª–∞–∂–Ω—ã–π ‚Üí ŒîT = 3¬∞C
        (20, 15),  # 20¬∞C —Å—É—Ö–æ–π, 15¬∞C –≤–ª–∞–∂–Ω—ã–π ‚Üí ŒîT = 5¬∞C
        (10, 8),   # 10¬∞C —Å—É—Ö–æ–π, 8¬∞C –≤–ª–∞–∂–Ω—ã–π ‚Üí ŒîT = 2¬∞C
        (25, 20),  # 25¬∞C —Å—É—Ö–æ–π, 20¬∞C –≤–ª–∞–∂–Ω—ã–π ‚Üí ŒîT = 5¬∞C
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –í–ò–¢-1")
    print("=" * 50)
    
    for t_dry, t_wet in test_cases:
        result = calculate_humidity(t_dry, t_wet)
        if result["success"]:
            print(f"‚úÖ {result['result_text']}")
        else:
            print(f"‚ùå {result['error']}")
    
    print("\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞–±–ª–∏—Ü–µ:")
    table_info = get_table_range()
    print(f"–î–∏–∞–ø–∞–∑–æ–Ω —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä: {table_info['temperature_range']}")
    print(f"–î–∏–∞–ø–∞–∑–æ–Ω —Ä–∞–∑–Ω–æ—Å—Ç–µ–π: {table_info['delta_range']}")
    print(f"–í—Å–µ–≥–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä: {table_info['total_temperatures']}")
    print(f"–í—Å–µ–≥–æ —Ä–∞–∑–Ω–æ—Å—Ç–µ–π: {table_info['total_deltas']}")
